desc: Tests manipulation operations on objects
tests:

    # Define some objects to work with
    - def: obj = r.expr({'a':1, 'b':2,'c':"str",'d':null})

    ##  Get attr

    - cd: obj['a']
      js: [obj('a'), obj.getAttr('a')]
      ot: 1
    - cd: obj['c']
      js: [obj('c'), obj.getAttr('c')]
      ot: "'str'"

    ## Has_Fields

    - cd: obj.has_fields('b')
      ot: true
    - cd: obj.keys().contains('d')
      ot: true
    - cd: obj.has_fields('d')
      ot: false
    - cd: obj.has_fields('e')
      ot: false

    # Has_Fields is variadic
    - cd: obj.has_fields('a', 'b')
      ot: true
    - cd: obj.has_fields('a', 'd')
      ot: false
    - cd: obj.has_fields('a', 'e')
      ot: false

    # Has_Fields is polymorphic
    - cd: r.expr([obj, obj.pluck('a', 'b')]).has_fields('a', 'b').count()
      ot: 2
    - cd: r.expr([obj, obj.pluck('a', 'b')]).has_fields('a', 'c').count()
      ot: 1

    ## Pluck

    - cd: obj.pluck('a')
      ot: ({'a':1})
    - cd: obj.pluck('a', 'b')
      ot: ({'a':1, 'b':2})

    ## Without

    - cd: obj.without('a')
      ot: ({'b':2, 'c':'str', 'd':null})
    - cd: obj.without('a', 'b')
      ot: ({'c':'str', 'd':null})
    - cd: obj.without('a', 'b', 'c', 'd')
      ot: ({})

    ## Merge

    # add property
    - cd: "obj.merge({'e':-2})"
      ot: ({'a':1, 'b':2, 'c':'str', 'd':null, 'e':-2})

    # overwrite
    - cd: "obj.merge({'a':-1})"
      ot: ({'a':-1, 'b':2, 'c':'str', 'd':null})

    ## keys
    - cd: obj.keys()
      ot: (['a', 'b', 'c', 'd'])
